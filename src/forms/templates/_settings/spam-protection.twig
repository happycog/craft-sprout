{% extends "sprout-module-core/_layouts/settings" %}

{% import "_includes/forms" as forms %}
{% import "sprout-module-core/_macros/sproutcp" as sproutCp %}

{% set module = sprout.modules.forms %}
{% set settings = module.getSettings() %}
{% set currentSubNavKey = 'spam-protection' %}

{% block settings %}

    {% set saveSpamWarning = sproutConfigWarning(module, 'saveSpamToDatabase') %}

    {% if not settings.enableSaveData %}
        {% set saveSpamWarning = "'Save data to the Craft database' on the 'Forms' settings page must also be enabled."|t('sprout-module-forms') %}
    {% endif %}

    {{ forms.lightswitchField({
        label: "Save Spam to the database",
        instructions: "How submissions will behave after a submission is flagged as spam.",
        name: 'saveSpamToDatabase',
        on: settings.saveSpamToDatabase,
        onLabel: "Save Data"|t('sprout-module-forms'),
        offLabel: "Don't Save Data"|t('sprout-module-forms'),
        warning: saveSpamWarning,
    }) }}

    {{ forms.selectField({
        label: "Spam Redirect Behavior"|t('sprout-module-forms'),
        instructions: 'The behavior your user will see if a submission is flagged as spam. Redirecting as normal will simulate a successful submission and direct the user to the Redirect Page. All failed captchas are logged on the Spam Submissions saved in the database.'|t('sprout-module-forms'),
        name: 'spamRedirectBehavior',
        options: settings.getSpamRedirectBehaviorsAsOptions(),
        value: settings.spamRedirectBehavior,
        first: true,
        warning: sproutConfigWarning(module, 'spamRedirectBehavior')
    }) }}

    {{ forms.textField({
        label: "Spam Limit"|t('sprout-module-forms'),
        instructions: "The total number of Spam submissions that will be stored in the database. When the limit is reached, the least recently updated Spam Submission will be deleted from the database."|t('sprout-module-forms'),
        id: 'spamLimit',
        name: 'spamLimit',
        size:'10',
        value: settings.spamLimit,
        warning: sproutConfigWarning(module, 'spamLimit')
    }) }}

    {{ forms.selectField({
        label: "Cleanup Probability"|t('sprout-module-forms'),
        id: 'cleanup-probability',
        name: 'cleanupProbability',
        instructions: "The probability that the Spam cleanup task will run each time a Submission is saved. A lower probability will trigger a cleanup task less often and the number of Spam Submissions stored in the database may be higher than the Spam Limit target until the cleanup task is triggered."|t('sprout-module-forms'),
        options: [
            { value: '0', label: 'None' },
            { value: '100000', label: '1 in 10'},
            { value: '10000', label: '1 in 100' },
            { value: '1000', label: '1 in 1,000' },
            { value: '100', label: '1 in 10,000' },
            { value: '10', label: '1 in 100,000' },
            { value: '1', label: '1 in 1,000,000' }
        ],
        value: settings.cleanupProbability,
        warning: sproutConfigWarning(module, 'cleanupProbability')
    }) }}

    <hr>

    {% set captchas = sprout.modules.forms.formCaptchas.getAllCaptchas() %}

    {% for captcha in captchas %}

        {% set captchaId = className(captcha)|kebab %}

        {% set isEnabled = settings['captchaSettings'][className(captcha)]['enabled'] ?? false %}
        {{ forms.lightswitchField({
            label: captcha.getName(),
            instructions: captcha.getDescription(),
            name: 'captchaSettings[' ~ className(captcha) ~ '][enabled]',
            toggle: captchaId,
            on: isEnabled,
            onLabel: "Enable"|t('sprout-module-forms'),
            offLabel: "Disable"|t('sprout-module-forms'),
            warning: sproutConfigWarning(module, 'captchaSettings')
        }) }}

        {% if captcha.getCaptchaSettingsHtml()|length %}
            <div id="{{ captchaId }}" class="{{ not isEnabled ? "hidden" : '' }}">
                {{ captcha.getCaptchaSettingsHtml()|raw }}
            </div>
        {% endif %}

        {% if not loop.last %}
            <hr>
        {% endif %}
    {% endfor %}

{% endblock %}
